{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\qrgod\\\\src\\\\components\\\\dashboard\\\\StatCards.js\";\nimport React from 'react';\nimport { QrCode, Users, TrendingUp, Target, Activity, Globe, Smartphone, BarChart3 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatCards = ({\n  stats\n}) => {\n  const statCards = [{\n    title: 'Total Scans',\n    value: stats.totalScans.toLocaleString(),\n    change: `+${stats.weekGrowth}%`,\n    changeType: 'positive',\n    icon: QrCode,\n    color: 'blue',\n    description: 'Total QR code scans'\n  }, {\n    title: 'Unique Users',\n    value: stats.uniqueUsers.toLocaleString(),\n    change: `+${stats.monthGrowth}%`,\n    changeType: 'positive',\n    icon: Users,\n    color: 'green',\n    description: 'Unique visitors'\n  }, {\n    title: 'Scan Rate',\n    value: `${(stats.scanRate * 100).toFixed(1)}%`,\n    change: '+2.1%',\n    changeType: 'positive',\n    icon: Target,\n    color: 'purple',\n    description: 'Conversion rate'\n  }, {\n    title: 'Active QR Codes',\n    value: stats.activeQRCodes,\n    change: `${stats.activeQRCodes}/${stats.totalQRCodes}`,\n    changeType: 'neutral',\n    icon: Activity,\n    color: 'orange',\n    description: 'Currently active'\n  }, {\n    title: 'Today\\'s Scans',\n    value: stats.todayScans,\n    change: `+${Math.floor(Math.random() * 20) + 5}%`,\n    changeType: 'positive',\n    icon: TrendingUp,\n    color: 'indigo',\n    description: 'Scans today'\n  }, {\n    title: 'Avg. Conversion',\n    value: `${(stats.averageConversionRate * 100).toFixed(1)}%`,\n    change: '+1.2%',\n    changeType: 'positive',\n    icon: BarChart3,\n    color: 'pink',\n    description: 'Average rate'\n  }];\n  const getColorClasses = color => {\n    const colorMap = {\n      blue: 'bg-blue-50 text-blue-600 border-blue-200',\n      green: 'bg-green-50 text-green-600 border-green-200',\n      purple: 'bg-purple-50 text-purple-600 border-purple-200',\n      orange: 'bg-orange-50 text-orange-600 border-orange-200',\n      indigo: 'bg-indigo-50 text-indigo-600 border-indigo-200',\n      pink: 'bg-pink-50 text-pink-600 border-pink-200'\n    };\n    return colorMap[color] || colorMap.blue;\n  };\n  const getChangeColor = changeType => {\n    switch (changeType) {\n      case 'positive':\n        return 'text-green-600 bg-green-50';\n      case 'negative':\n        return 'text-red-600 bg-red-50';\n      default:\n        return 'text-gray-600 bg-gray-50';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n    children: statCards.map((card, index) => {\n      const Icon = card.icon;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card hover:shadow-lg transition-shadow duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-lg border ${getColorClasses(card.color)}`,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-2 py-1 rounded-full text-xs font-medium ${getChangeColor(card.changeType)}`,\n            children: card.change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: card.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = StatCards;\nexport default StatCards;\nvar _c;\n$RefreshReg$(_c, \"StatCards\");","map":{"version":3,"names":["React","QrCode","Users","TrendingUp","Target","Activity","Globe","Smartphone","BarChart3","jsxDEV","_jsxDEV","StatCards","stats","statCards","title","value","totalScans","toLocaleString","change","weekGrowth","changeType","icon","color","description","uniqueUsers","monthGrowth","scanRate","toFixed","activeQRCodes","totalQRCodes","todayScans","Math","floor","random","averageConversionRate","getColorClasses","colorMap","blue","green","purple","orange","indigo","pink","getChangeColor","className","children","map","card","index","Icon","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/qrgod/src/components/dashboard/StatCards.js"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  QrCode, \r\n  Users, \r\n  TrendingUp, \r\n  Target,\r\n  Activity,\r\n  Globe,\r\n  Smartphone,\r\n  BarChart3\r\n} from 'lucide-react';\r\n\r\nconst StatCards = ({ stats }) => {\r\n  const statCards = [\r\n    {\r\n      title: 'Total Scans',\r\n      value: stats.totalScans.toLocaleString(),\r\n      change: `+${stats.weekGrowth}%`,\r\n      changeType: 'positive',\r\n      icon: QrCode,\r\n      color: 'blue',\r\n      description: 'Total QR code scans'\r\n    },\r\n    {\r\n      title: 'Unique Users',\r\n      value: stats.uniqueUsers.toLocaleString(),\r\n      change: `+${stats.monthGrowth}%`,\r\n      changeType: 'positive',\r\n      icon: Users,\r\n      color: 'green',\r\n      description: 'Unique visitors'\r\n    },\r\n    {\r\n      title: 'Scan Rate',\r\n      value: `${(stats.scanRate * 100).toFixed(1)}%`,\r\n      change: '+2.1%',\r\n      changeType: 'positive',\r\n      icon: Target,\r\n      color: 'purple',\r\n      description: 'Conversion rate'\r\n    },\r\n    {\r\n      title: 'Active QR Codes',\r\n      value: stats.activeQRCodes,\r\n      change: `${stats.activeQRCodes}/${stats.totalQRCodes}`,\r\n      changeType: 'neutral',\r\n      icon: Activity,\r\n      color: 'orange',\r\n      description: 'Currently active'\r\n    },\r\n    {\r\n      title: 'Today\\'s Scans',\r\n      value: stats.todayScans,\r\n      change: `+${Math.floor(Math.random() * 20) + 5}%`,\r\n      changeType: 'positive',\r\n      icon: TrendingUp,\r\n      color: 'indigo',\r\n      description: 'Scans today'\r\n    },\r\n    {\r\n      title: 'Avg. Conversion',\r\n      value: `${(stats.averageConversionRate * 100).toFixed(1)}%`,\r\n      change: '+1.2%',\r\n      changeType: 'positive',\r\n      icon: BarChart3,\r\n      color: 'pink',\r\n      description: 'Average rate'\r\n    }\r\n  ];\r\n\r\n  const getColorClasses = (color) => {\r\n    const colorMap = {\r\n      blue: 'bg-blue-50 text-blue-600 border-blue-200',\r\n      green: 'bg-green-50 text-green-600 border-green-200',\r\n      purple: 'bg-purple-50 text-purple-600 border-purple-200',\r\n      orange: 'bg-orange-50 text-orange-600 border-orange-200',\r\n      indigo: 'bg-indigo-50 text-indigo-600 border-indigo-200',\r\n      pink: 'bg-pink-50 text-pink-600 border-pink-200'\r\n    };\r\n    return colorMap[color] || colorMap.blue;\r\n  };\r\n\r\n  const getChangeColor = (changeType) => {\r\n    switch (changeType) {\r\n      case 'positive':\r\n        return 'text-green-600 bg-green-50';\r\n      case 'negative':\r\n        return 'text-red-600 bg-red-50';\r\n      default:\r\n        return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n      {statCards.map((card, index) => {\r\n        const Icon = card.icon;\r\n        return (\r\n          <div key={index} className=\"card hover:shadow-lg transition-shadow duration-200\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className={`p-3 rounded-lg border ${getColorClasses(card.color)}`}>\r\n                <Icon size={24} />\r\n              </div>\r\n              <div className={`px-2 py-1 rounded-full text-xs font-medium ${getChangeColor(card.changeType)}`}>\r\n                {card.change}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mb-2\">\r\n              <h3 className=\"text-2xl font-bold text-gray-900\">\r\n                {card.value}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {card.title}\r\n              </p>\r\n            </div>\r\n            \r\n            <p className=\"text-xs text-gray-500\">\r\n              {card.description}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatCards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}